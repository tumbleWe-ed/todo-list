(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap);"]),i.push([n.id,":root {\n    font-family: 'Open Sans', sans-serif;\n}\n\nbody {\n    margin: 0;\n    display: flex;\n}\n\n.sidebar {\n    background-color: lightgrey;\n    width: 25vw;\n    padding: 30px 30px 0px;\n\n    display: grid;\n    grid-template-rows: 45px ;\n    grid-auto-rows: 45px;\n    overflow-y: auto;\n}\n\n.sidebar > div {\n    font-size: 30px;\n}\n\n.sidebar-project {\n    display: grid;\n    grid-auto-rows: 30px;\n    gap: 10px;\n    \n}\n\n.sidebar-project-list {\n    margin: 3px;\n    \n}\n\n.project-div {\n    display: flex;\n    justify-content: space-between;\n}\n\n/** Main Body **/\n\n.main-body {\n    background-color: slategray;\n    width: 75vw;\n    height: 100vh;\n    padding: 0px 60px 0px;\n\n    display: grid;\n    grid-template-rows: 100px 30px;\n    grid-auto-rows: 75px;\n    gap: 20px;\n    overflow-y: auto;\n}\n\n.main-body > h2 {\n    font-size: 45px;\n}\n\n.todo-creator-btn {\n    width: 40px;\n}\n\n.todo-btn {\n    width: 40px;\n}\n\n.main-body > div {\n\n    background-color: red;\n    color: white;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AACA;IACI,oCAAoC;AACxC;;AAEA;IACI,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,2BAA2B;IAC3B,WAAW;IACX,sBAAsB;;IAEtB,aAAa;IACb,yBAAyB;IACzB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,SAAS;;AAEb;;AAEA;IACI,WAAW;;AAEf;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA,gBAAgB;;AAEhB;IACI,2BAA2B;IAC3B,WAAW;IACX,aAAa;IACb,qBAAqB;;IAErB,aAAa;IACb,8BAA8B;IAC9B,oBAAoB;IACpB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,qBAAqB;IACrB,YAAY;AAChB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');\n:root {\n    font-family: 'Open Sans', sans-serif;\n}\n\nbody {\n    margin: 0;\n    display: flex;\n}\n\n.sidebar {\n    background-color: lightgrey;\n    width: 25vw;\n    padding: 30px 30px 0px;\n\n    display: grid;\n    grid-template-rows: 45px ;\n    grid-auto-rows: 45px;\n    overflow-y: auto;\n}\n\n.sidebar > div {\n    font-size: 30px;\n}\n\n.sidebar-project {\n    display: grid;\n    grid-auto-rows: 30px;\n    gap: 10px;\n    \n}\n\n.sidebar-project-list {\n    margin: 3px;\n    \n}\n\n.project-div {\n    display: flex;\n    justify-content: space-between;\n}\n\n/** Main Body **/\n\n.main-body {\n    background-color: slategray;\n    width: 75vw;\n    height: 100vh;\n    padding: 0px 60px 0px;\n\n    display: grid;\n    grid-template-rows: 100px 30px;\n    grid-auto-rows: 75px;\n    gap: 20px;\n    overflow-y: auto;\n}\n\n.main-body > h2 {\n    font-size: 45px;\n}\n\n.todo-creator-btn {\n    width: 40px;\n}\n\n.todo-btn {\n    width: 40px;\n}\n\n.main-body > div {\n\n    background-color: red;\n    color: white;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var u=t(p),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var f=r(A,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var d=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},338:(n,e,t)=>{function o(){const n=document.querySelector("#title"),e=document.querySelector("#notes");document.querySelector("#submit-btn").addEventListener("click",(t=>{console.log(n.value,e.value),t.preventDefault()}))}t.d(e,{Z:()=>o})},910:(n,e,t)=>{var o=t(379),r=t.n(o),a=t(795),i=t.n(a),s=t(569),d=t.n(s),c=t(565),l=t.n(c),p=t(216),u=t.n(p),A=t(589),f=t.n(A),v=t(28),m={};m.styleTagTransform=f(),m.setAttributes=l(),m.insert=d().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=u(),r()(v.Z,m),v.Z&&v.Z.locals&&v.Z.locals;var g=t(338);const b=document.querySelector(".sidebar-project-list"),y=document.querySelector("#project-creator-btn"),h=document.querySelector(".main-body"),x=[],C=[];let B,I=0;y.addEventListener("click",(()=>{const n=prompt("Enter your project's name");""!==n&&null!==n&&(function(n){const e=document.createElement("div"),t=document.createElement("li"),o=document.createElement("button");o.textContent="Delete",o.className="project-del-btn",e.append(t,o),b.append(e),t.textContent=n,e.className="project-div",x.push(e)}(n),window[n]={arrOfTodos:[]},C.push(window[n]),x.forEach((n=>{n.addEventListener("click",(e=>{const t=n.textContent;h.innerHTML=`<h2>${t.slice(0,-6)}</h2> <button class='todo-btn'>+</button>`;const o=x.indexOf(n);!function(n,e){document.querySelector(".todo-btn").addEventListener("click",(()=>{const t={title:void 0,notes:void 0,div:void 0,deleteBtn:void 0};t.div=document.createElement("div"),t.div.className=`${n}${I}`,t.div.innerHTML='<dialog class="form-dialog">\n        <form method="dialog"class="form">\n            <input type="text" id="title" placeholder="title"><br>\n            <textarea id="notes" placeholder="Notes"></textarea><br>\n            <button id="submit-btn">Submit</button> <button class="cancel-btn" type="reset">Cancel</button>\n        </form>\n    </dialog>',h.append(t.div);const o=document.querySelector(".form-dialog"),r=document.querySelector("#title"),a=document.querySelector("#notes");o.showModal(),document.querySelector("#submit-btn").addEventListener("click",(n=>{h.append(t.div),C[e].arrOfTodos.push(t),t.title=`${r.value}`,t.notes=`${a.value}`,n.preventDefault(),(0,g.Z)(),console.log(C),o.close(),C.forEach((n=>{n.arrOfTodos=n.arrOfTodos.filter(((n,e,t)=>e===t.findIndex((e=>e.div===n.div))))})),t.div.innerHTML=`title: ${t.title}<br>notes: ${t.notes}<br>`;const i=document.createElement("button");i.textContent="Delete",i.classList.add("delele-btn"),i.id=`todo-del-btn${I}`,t.div.append(i),t.deleteBtn=i,I++,n.stopPropagation()})),document.querySelector(".cancel-btn").addEventListener("click",(()=>{o.close(),t.div.remove(),console.log(C)}))}))}(n.textContent,o),C[o].arrOfTodos.forEach((n=>{h.append(n.div)})),B=o}))})))})),document.addEventListener("click",(function(n){const e=n.target;if(console.log(e),e.classList.contains("project-div")&&(console.log(e),I=0===C[B].arrOfTodos.length?0:C[B].arrOfTodos.length-1,console.log("i = ",I)),e.classList.contains("delele-btn")){const n=e.id.slice(-1);if(C[B].arrOfTodos[n].div.remove(),C[B].arrOfTodos.splice(n,1),console.log(C[B].arrOfTodos.length),1===C[B].arrOfTodos.length)C[B].arrOfTodos[0].div.className=C[B].arrOfTodos[0].div.className.replace(/.$/,"0"),C[B].arrOfTodos[0].deleteBtn.id=C[B].arrOfTodos[0].deleteBtn.id.replace(/.$/,"0");else if(0===C[B].arrOfTodos.length)I=0;else for(let n=0;n<C[B].arrOfTodos.length;n++)C[B].arrOfTodos[n].div.className=C[B].arrOfTodos[n].div.className.replace(/.$/,`${n}`),C[B].arrOfTodos[n].deleteBtn.id=C[B].arrOfTodos[n].deleteBtn.id.replace(/.$/,`${n}`),console.log(C[B].arrOfTodos[n]);console.log(C)}if(e.classList.contains("project-del-btn")){C.splice(B,1);const n=e.parentElement,t=x.indexOf(n);n.remove(),x.splice(t,1),h.innerHTML="",console.log(x),console.log(C)}}))}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,t(910),t(338)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,